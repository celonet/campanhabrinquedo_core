// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace campanhabrinquedo.repository.Migrations
{
    [DbContext(typeof(CampanhaBrinquedoContext))]
    [Migration("20170923164144_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("campanhabrinquedo.domain.Entidades.Campanha", b =>
                {
                    b.Property<Guid>("CampanhaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano");

                    b.Property<string>("Descricao");

                    b.Property<int>("QtdeCriancas");

                    b.HasKey("CampanhaId");

                    b.ToTable("Campanha");
                });

            modelBuilder.Entity("campanhabrinquedo.domain.Entidades.Comunidade", b =>
                {
                    b.Property<Guid>("ComunidadeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Nome");

                    b.HasKey("ComunidadeId");

                    b.ToTable("Comunidade");
                });

            modelBuilder.Entity("campanhabrinquedo.domain.Entidades.Crianca", b =>
                {
                    b.Property<Guid>("CriancaId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ComunidadeId");

                    b.Property<bool>("Especial");

                    b.Property<string>("Idade");

                    b.Property<bool>("Impresso");

                    b.Property<string>("Nome");

                    b.Property<Guid?>("ResponsavelId");

                    b.Property<int>("Sexo");

                    b.HasKey("CriancaId");

                    b.HasIndex("ComunidadeId");

                    b.HasIndex("ResponsavelId");

                    b.ToTable("Crianca");
                });

            modelBuilder.Entity("campanhabrinquedo.domain.Entidades.Padrinho", b =>
                {
                    b.Property<Guid>("PadrinhoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Celular");

                    b.Property<Guid?>("ComunidadeId");

                    b.Property<string>("Nome");

                    b.Property<string>("Telefone");

                    b.HasKey("PadrinhoId");

                    b.HasIndex("ComunidadeId");

                    b.ToTable("Padrinho");
                });

            modelBuilder.Entity("campanhabrinquedo.domain.Entidades.Responsavel", b =>
                {
                    b.Property<Guid>("ResponsavelId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<string>("RG");

                    b.HasKey("ResponsavelId");

                    b.ToTable("Responsavel");
                });

            modelBuilder.Entity("campanhabrinquedo.domain.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("campanhabrinquedo.domain.Entidades.Crianca", b =>
                {
                    b.HasOne("campanhabrinquedo.domain.Entidades.Comunidade", "Comunidade")
                        .WithMany()
                        .HasForeignKey("ComunidadeId");

                    b.HasOne("campanhabrinquedo.domain.Entidades.Responsavel", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelId");
                });

            modelBuilder.Entity("campanhabrinquedo.domain.Entidades.Padrinho", b =>
                {
                    b.HasOne("campanhabrinquedo.domain.Entidades.Comunidade", "Comunidade")
                        .WithMany()
                        .HasForeignKey("ComunidadeId");
                });
#pragma warning restore 612, 618
        }
    }
}
